{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\midpay\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { database, ref, get, set } from \"../firebase\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const location = useLocation();\n  const [username, setUsername] = useState(\"User\");\n  const [amount, setAmount] = useState(\"\");\n  useEffect(() => {\n    if (location.state && location.state.username) {\n      setUsername(location.state.username);\n    }\n  }, [location.state]);\n  const generateCustRefNo = () => {\n    return Math.floor(10000000000000 + Math.random() * 90000000000000).toString();\n  };\n  const getCurrentFormattedDateTime = () => {\n    const now = new Date();\n    const pad = n => n.toString().padStart(2, \"0\");\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())} ${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  };\n  const encryptTransaction = user => {\n    const payload = {\n      AuthID: 'M00006572',\n      AuthKey: 'Qv0rg4oN8cS9sm6PS3rr6fu7MN2FB0Oo',\n      CustRefNum: user.custrefno,\n      AggRefNo: '1852521913300193434',\n      txn_Amount: user.amount,\n      PaymentDate: user.paymentdate,\n      ContactNo: user.mobile,\n      EmailId: user.email,\n      IntegrationType: user.integrationType,\n      CallbackURL: user.callbackurl,\n      adf1: \"NA\",\n      adf2: \"NA\",\n      adf3: \"NA\",\n      MOP: user.mop,\n      MOPType: user.moptype,\n      MOPDetails: user.mopdetails\n    };\n    const keyValueString = `{${Object.entries(payload).map(([key, value]) => `\"${key}\":\"${value}\"`).join(\",\")}}`;\n    console.log(\"🔍 Payload to Encrypt:\", keyValueString);\n    const key = CryptoJS.enc.Utf8.parse(user.authKey.padEnd(32, \"0\"));\n    const iv = CryptoJS.enc.Utf8.parse(user.authKey.substring(0, 16));\n    const encrypted = CryptoJS.AES.encrypt(keyValueString, key, {\n      iv,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.Pkcs7\n    });\n    const encryptedString = encrypted.toString();\n    console.log(\"🔐 Encrypted Data:\", encryptedString);\n    return encryptedString;\n  };\n  const handleStartPayment = async () => {\n    if (!amount || isNaN(amount) || Number(amount) <= 0) {\n      alert(\"Enter a valid amount\");\n      return;\n    }\n    try {\n      const usersRef = ref(database, \"users\");\n      const snapshot = await get(usersRef);\n      if (snapshot.exists()) {\n        const usersData = snapshot.val();\n        const matchedUser = Object.values(usersData).find(user => user.name === username);\n        if (matchedUser) {\n          const fullUserData = {\n            ...matchedUser,\n            custrefno: generateCustRefNo(),\n            amount,\n            paymentdate: getCurrentFormattedDateTime(),\n            integrationType: \"nonseamless\",\n            callbackurl: \"https://nonseam-pay.onrender.com/transaction\",\n            mop: \"NA\",\n            moptype: \"NA\",\n            mopdetails: \"NA\"\n          };\n\n          // Store AuthKey in localStorage for transaction page decryption\n          localStorage.setItem('currentAuthKey', fullUserData.authKey);\n          localStorage.setItem('currentCustRefNum', fullUserData.custrefno);\n          const encryptedData = encryptTransaction(fullUserData);\n\n          // 🔥 Save only encrypted string in Firebase under \"encrypted/{custrefno}\"\n          const encryptedRef = ref(database, `encrypted/${fullUserData.custrefno}`);\n          await set(encryptedRef, encryptedData);\n\n          // Create form and submit\n          const form = document.createElement(\"form\");\n          form.method = \"POST\";\n          form.action = \"https://dashboard.skill-pay.in/pay/paymentinit\";\n          const authIdField = document.createElement(\"input\");\n          authIdField.type = \"hidden\";\n          authIdField.name = \"AuthID\";\n          authIdField.value = fullUserData.authId;\n          const encDataField = document.createElement(\"input\");\n          encDataField.type = \"hidden\";\n          encDataField.name = \"encData\";\n          encDataField.value = encryptedData;\n          form.appendChild(authIdField);\n          form.appendChild(encDataField);\n          document.body.appendChild(form);\n          form.submit();\n        } else {\n          alert(\"User not found.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ Error processing transaction:\", error);\n      alert(\"An error occurred while processing the payment.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uD83C\\uDF89 Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You\\u2019ve successfully logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter amount (INR)\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        style: {\n          padding: \"10px\",\n          fontSize: \"16px\",\n          width: \"200px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartPayment,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          backgroundColor: \"#28a745\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        children: \"Start Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"K1FOA2yrNNPmg/Z/SK267Sda37A=\", false, function () {\n  return [useLocation];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","database","ref","get","set","CryptoJS","jsxDEV","_jsxDEV","MainPage","_s","location","username","setUsername","amount","setAmount","state","generateCustRefNo","Math","floor","random","toString","getCurrentFormattedDateTime","now","Date","pad","n","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","encryptTransaction","user","payload","AuthID","AuthKey","CustRefNum","custrefno","AggRefNo","txn_Amount","PaymentDate","paymentdate","ContactNo","mobile","EmailId","email","IntegrationType","integrationType","CallbackURL","callbackurl","adf1","adf2","adf3","MOP","mop","MOPType","moptype","MOPDetails","mopdetails","keyValueString","Object","entries","map","key","value","join","console","log","enc","Utf8","parse","authKey","padEnd","iv","substring","encrypted","AES","encrypt","mode","CBC","padding","Pkcs7","encryptedString","handleStartPayment","isNaN","Number","alert","usersRef","snapshot","exists","usersData","val","matchedUser","values","find","name","fullUserData","localStorage","setItem","encryptedData","encryptedRef","form","document","createElement","method","action","authIdField","type","authId","encDataField","appendChild","body","submit","error","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","placeholder","onChange","e","target","fontSize","width","marginRight","onClick","backgroundColor","color","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/midpay/client/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { database, ref, get, set } from \"../firebase\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst MainPage = () => {\r\n  const location = useLocation();\r\n  const [username, setUsername] = useState(\"User\");\r\n  const [amount, setAmount] = useState(\"\");  \r\n\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.username) {\r\n      setUsername(location.state.username);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const generateCustRefNo = () => {\r\n    return Math.floor(10000000000000 + Math.random() * 90000000000000).toString();\r\n  };\r\n\r\n  const getCurrentFormattedDateTime = () => {\r\n    const now = new Date();\r\n    const pad = (n) => n.toString().padStart(2, \"0\");\r\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())} ${pad(\r\n      now.getHours()\r\n    )}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\r\n  };\r\n\r\n  \r\n\r\n  const encryptTransaction = (user) => {\r\n    const payload = {\r\n      AuthID: 'M00006572',\r\n      AuthKey: 'Qv0rg4oN8cS9sm6PS3rr6fu7MN2FB0Oo',\r\n      CustRefNum: user.custrefno,\r\n      AggRefNo:'1852521913300193434',\r\n      txn_Amount: user.amount,\r\n      PaymentDate: user.paymentdate,\r\n      ContactNo: user.mobile,\r\n      EmailId: user.email,\r\n      IntegrationType: user.integrationType,\r\n      CallbackURL: user.callbackurl,\r\n      adf1: \"NA\",\r\n      adf2: \"NA\",\r\n      adf3: \"NA\",\r\n      MOP: user.mop,\r\n      MOPType: user.moptype,\r\n      MOPDetails: user.mopdetails,\r\n    };\r\n\r\n    const keyValueString = `{${Object.entries(payload)\r\n      .map(([key, value]) => `\"${key}\":\"${value}\"`)\r\n      .join(\",\")}}`;\r\n\r\n    console.log(\"🔍 Payload to Encrypt:\", keyValueString);\r\n\r\n    const key = CryptoJS.enc.Utf8.parse(user.authKey.padEnd(32, \"0\"));\r\n    const iv = CryptoJS.enc.Utf8.parse(user.authKey.substring(0, 16));\r\n\r\n    const encrypted = CryptoJS.AES.encrypt(keyValueString, key, {\r\n      iv,\r\n      mode: CryptoJS.mode.CBC,\r\n      padding: CryptoJS.pad.Pkcs7,\r\n    });\r\n\r\n    const encryptedString = encrypted.toString();\r\n    console.log(\"🔐 Encrypted Data:\", encryptedString);\r\n\r\n    return encryptedString;\r\n  };\r\n\r\n  const handleStartPayment = async () => {\r\n  if (!amount || isNaN(amount) || Number(amount) <= 0) {\r\n    alert(\"Enter a valid amount\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const usersRef = ref(database, \"users\");\r\n    const snapshot = await get(usersRef);\r\n\r\n    if (snapshot.exists()) {\r\n      const usersData = snapshot.val();\r\n      const matchedUser = Object.values(usersData).find((user) => user.name === username);\r\n\r\n      if (matchedUser) {\r\n        const fullUserData = {\r\n          ...matchedUser,\r\n          custrefno: generateCustRefNo(),\r\n          amount,\r\n          paymentdate: getCurrentFormattedDateTime(),\r\n          integrationType: \"nonseamless\",\r\n          callbackurl: \"https://nonseam-pay.onrender.com/transaction\",\r\n          mop: \"NA\",\r\n          moptype: \"NA\",\r\n          mopdetails: \"NA\",\r\n        };\r\n\r\n        // Store AuthKey in localStorage for transaction page decryption\r\n        localStorage.setItem('currentAuthKey', fullUserData.authKey);\r\n        localStorage.setItem('currentCustRefNum', fullUserData.custrefno);\r\n\r\n        const encryptedData = encryptTransaction(fullUserData);\r\n\r\n        // 🔥 Save only encrypted string in Firebase under \"encrypted/{custrefno}\"\r\n        const encryptedRef = ref(database, `encrypted/${fullUserData.custrefno}`);\r\n        await set(encryptedRef, encryptedData);\r\n\r\n        // Create form and submit\r\n        const form = document.createElement(\"form\");\r\n        form.method = \"POST\";\r\n        form.action = \"https://dashboard.skill-pay.in/pay/paymentinit\";\r\n\r\n        const authIdField = document.createElement(\"input\");\r\n        authIdField.type = \"hidden\";\r\n        authIdField.name = \"AuthID\";\r\n        authIdField.value = fullUserData.authId;\r\n\r\n        const encDataField = document.createElement(\"input\");\r\n        encDataField.type = \"hidden\";\r\n        encDataField.name = \"encData\";\r\n        encDataField.value = encryptedData;\r\n\r\n        form.appendChild(authIdField);\r\n        form.appendChild(encDataField);\r\n        document.body.appendChild(form);\r\n        form.submit();\r\n      } else {\r\n        alert(\"User not found.\");\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(\"❌ Error processing transaction:\", error);\r\n    alert(\"An error occurred while processing the payment.\");\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\", textAlign: \"center\" }}>\r\n      <h1>🎉 Welcome, {username}!</h1>\r\n      <p>You’ve successfully logged in.</p>\r\n\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter amount (INR)\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          style={{\r\n            padding: \"10px\",\r\n            fontSize: \"16px\",\r\n            width: \"200px\",\r\n            marginRight: \"10px\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={handleStartPayment}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            fontSize: \"16px\",\r\n            backgroundColor: \"#28a745\",\r\n            color: \"#fff\",\r\n            border: \"none\",\r\n            borderRadius: \"5px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Start Payment\r\n        </button>\r\n\r\n\r\n      </div>\r\n    \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}